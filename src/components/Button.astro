---
interface Props {
	variant: string;
	buttonType: "submit" | "reset" | "button";
}

const { variant, buttonType } = Astro.props;
---

<button type={buttonType} class:list={["fw-700", variant]}>
	<slot />
</button>

<style lang="scss">
	button {
		padding: 1rem 1.5rem;
		font-family: var(--ff-body);
		border-radius: 100vw;
		border: 0;
		transition: background-color 1000ms ease-in-out;
		z-index: 100;
		width: fit-content;
		&:hover,
		&:focus {
			cursor: pointer;
			transition: background-color 250ms ease-in-out;
		}
		&:disabled {
			opacity: 0.8;
		}
	}

	.primary {
		color: var(--accent-100);
		background-color: var(--accent-200);
		box-shadow: 0px 0px 25px -10px var(--accent-200);
		border: 1px solid var(--accent-200);
		&:hover,
		&:focus {
			background-color: var(--accent-250);
			border: 1px solid var(--accent-250);
		}
	}

	.secondary-light {
		color: var(--primary-200);
		background-color: var(--accent-100);
		box-shadow: 0px 0px 25px -10px var(---accent-100);
		border: 1px solid var(--primary-200);
		&:hover,
		&:focus {
			color: var(--accent-100);
			background-color: var(--primary-200);
		}
	}

	.secondary-dark {
		color: var(--accent-100);
		background-color: var(--primary-300);
		box-shadow: 0px 0px 25px -10px var(--primary-300);
		border: 1px solid var(--accent-100);
		&:hover,
		&:focus {
			background-color: var(--accent-100);
			color: var(--primary-300);
		}
	}

	button.mobile-menu {
		width: 100%;
	}

	@media only screen and (min-width: 768px) {
		button.mobile-menu {
			width: fit-content;
			//min-width: 15rem;
			//font-size: clamp(0.5rem, 2vw, 1.5rem);
		}
		button {
			font-size: clamp(0.5rem, 2vw, 1.5rem);
		}
	}

	@media only screen and (min-width: 1024px) {
		button {
			font-size: clamp(1rem, 1.25vw, 1.5rem);
		}
	}

	@media only screen and (min-width: 1440px) {
		button {
			font-size: clamp(0.5rem, 1vw, 1.5rem);
		}
	}
</style>
